#!/usr/bin/env bash

# Aliases

# fzf
alias f="find . -type f | fzf --preview 'bat --color=always --style=header,grid --line-range :500 {}'"

# General

# Find + manage aliases
alias al='alias | less' # List all aliases
alias as='alias | grep' # Search aliases
alias ar='unalias' # Remove given alias

# Copy / pasting
alias cpwd='pwd | pbcopy' # Copy current path
alias pa='pbpaste' # Paste clipboard contents

# Finding files and directories
alias dud='du -d 1 -h' # List sizes of files within directory
alias duf='du -sh *' # List total size of current directory
alias ff='find . -type f -name' # Find a file by name within current directory
(( $+commands[fd] )) || alias fd='find . -type d -name' # Find direcroy by name

# External Services
alias myip='curl ipv4.icanhazip.com'

# dotfiles
alias dotfiles="cd ${DOTFILES_DIR:-$HOME/dotfiles}"

# orgmode
# alias notes="nvim ~/orgfiles/refile.org"
# fzf to search notes
#

# SSH
alias ssconfig="nvim ~/.ssh/config"
alias sskeys="cd ~/.ssh && ls -l"
alias ssgen="ssh-keygen -t rsa -b 4096 -C"
alias sscopy="ssh-copy-id"
alias ssadd="ssh-add"

# Git
alias lg="lazygit"


# Tmux shortcuts
alias tmux='tmux -u'
alias t='tmux'
alias ta='tmux attach-session -t'
alias tn='tmux new-session -s'
alias tl='tmux list-sessions'
alias tk='tmux kill-session -t'

# Tmux helpers
function tsplit() {
  tmux split-window -v "$@"
}

function tvsplit() {
  tmux split-window -h "$@"
}

function tresize() {
  tmux resize-pane -D "$@"
}

function tresizeh() {
  tmux resize-pane -R "$@"
}

function tresizev() {
  tmux resize-pane -U "$@"
}

function tresizeleft() {
  tmux resize-pane -L "$@"
}

function tresizeup() {
  tmux resize-pane -U "$@"
}

function tresizedown() {
  tmux resize-pane -D "$@"
}

function tresizeup() {
  tmux resize-pane -U "$@"
}

function tresizeleft() {
  tmux resize-pane -L "$@"
}

function tresizeright() {
  tmux resize-pane -R "$@"
}

# Perso

copy_pwd() {
    pwd | pbcopy
}

alias stage="cd /Users/aliramlaoui/Google\ Drive/My\ Drive/stage/"

export DRIVE="/Users/aliramlaoui/Google Drive/My Drive/"
export COURS="/Users/aliramlaoui/Google Drive/My Drive/Cours 3A"
cours() {
    cd /Users/aliramlaoui/Google\ Drive/My\ Drive/Cours\ 3A
}

fun() {
    cd /Users/aliramlaoui/Google\ Drive/My\ Drive/fun
}

ritz() {
    cd "$DRIVE"ritz
}

function latexnote() {
    if [[ $# -eq 0 ]]; then
        echo "Please provide a directory name as an argument."
        return 1
    fi

    local dest_dir="$1"
    local template_dir="/Users/aliramlaoui/Google Drive/My Drive/Cours 3A/latex/latex_template/"

    # Check if the destination directory exists, create it if it doesn't
    if [[ ! -d "$dest_dir" ]]; then
        mkdir -p "$dest_dir"
    fi

    # Copy the latex_template folder to the destination directory
    cp -r "$template_dir" "$dest_dir"

    echo "latex_template folder copied to $dest_dir successfully."
}

function latexbeamer() {
    if [[ $# -eq 0 ]]; then
        echo "Please provide a directory name as an argument."
        return 1
    fi

    local dest_dir="$1"
    local template_dir="/Users/aliramlaoui/Google Drive/My Drive/Cours 3A/latex/latex_beamer/"

    # Check if the destination directory exists, create it if it doesn't
    if [[ ! -d "$dest_dir" ]]; then
        mkdir -p "$dest_dir"
    fi

    # Copy the latex_template folder to the destination directory
    cp -r "$template_dir" "$dest_dir"

    echo "latex_template folder copied to $dest_dir successfully."
}

function latexcs() {
    if [[ $# -eq 0 ]]; then
        echo "Please provide a directory name as an argument."
        return 1
    fi

    local dest_dir="$1"
    local template_dir="/Users/aliramlaoui/Google Drive/My Drive/Cours 3A/latex/latex_cs/"

    # Check if the destination directory exists, create it if it doesn't
    if [[ ! -d "$dest_dir" ]]; then
        mkdir -p "$dest_dir"
    fi

    # Copy the latex_template folder to the destination directory
    cp -r "$template_dir" "$dest_dir"

    echo "latex_template folder copied to $dest_dir successfully."
}

editrc() {
    nvim ~/.zshrc
}

vault() {
    cd /Users/aliramlaoui/Library/Mobile\ Documents/iCloud~md~obsidian/Documents/Obsidian\ Vault
}

vaultcourse() {
    cd /Users/aliramlaoui/Library/Mobile\ Documents/iCloud~md~obsidian/Documents/Obsidian\ Vault/CSMVA
}

latexsnippets() {
    nvim ~/.config/nvim/my_snippets/tex.snippets
}

nvimconfig() {
    cd ~/.config/nvim
}

tmuxconfig() {
    nvim ~/.config/tmux/.tmux.conf
}

export EDITOR=nvim
